/**
 * Серверное приложение предоставляет набор REST-сервисов для клиентов системы ОМед.
 * Они реализованы на базе технологии Java Servlet API, благодаря чему приложение
 * может быть развернуто на различных J2EE-контейнерах (серверах приложений).
 * В качестве фреймворка для работы REST-сервисов используется библиотека Jersey,
 * соответствующая стандарту JAX-RS.
 *
 * Структурно серверное приложение можно поделить на три части:
 * обработчики запросов к сервисам, слой бизнес-логики и слой работы с хранилищем данных.
 *
 * Обработчики запросов (endpoint’ы) занимаются десериализацией данных с клиентов,
 * вызовом соответствующих методов бизнес-слоя и формированием ответа.
 * В этом же слое происходит управлением сессиями,
 * журналирование обращений и формирование сообщений в случае возникновения необработанных исключений.
 *
 * Бизнес-слой выполняет:
 * - обращения к хранилищу для получения метаданных и данных, активно используя кэширование метаданных;
 * - проверку прав;
 * - формирование дополнительной информации (слияние метаданных, окрашивание);
 * - проверку условий валидации при сохранении;
 * - вызов бизнес-функций по условию;
 * - пошаговое исполнение бизнес-функций, в т.ч. с передачей управления клиенту.
 *
 * Кэширование метаданных происходит раздельно для каждого домена (в терминологии системы ОМед).
 *
 * Хранилище метаданных и данных для получения информации делает вызовы к СУБД,
 * профилирует время их выполнения и генерирует специальные сообщения об ошибках,
 * позволяющие установить, что сбой произошел при обращении к СУБД или по причине
 * некорректного ответа СУБД.
 *
 * Еще можно выделить проект omed-meta, который является "мета-сердцем" системы.
 * Он содержит объекты для представления метаданных, парсеры выражений,
 * механизмы вычисления выражений, функции представления выражений в xml.
 */
package object omed {

}
