package omed.db

import java.sql.{Savepoint, Connection}
import java.util.concurrent.Executor
import java.util.Properties
import java.util
import sun.reflect.generics.reflectiveObjects.NotImplementedException


class ConnectionMock extends Connection {
  def close() { isClosed = true }

  var isClosed: Boolean = false

  def createStatement() = null

  def prepareStatement(sql: String) = null

  def prepareCall(sql: String) = null

  def nativeSQL(sql: String) = ""

  def setAutoCommit(autoCommit: Boolean) {}

  def getAutoCommit = false

  def commit() {}

  def rollback() {}

  def getMetaData = null

  def setReadOnly(readOnly: Boolean) {}

  def isReadOnly = false

  def setCatalog(catalog: String) {}

  def getCatalog = ""

  def setTransactionIsolation(level: Int) {}

  def getTransactionIsolation = 0

  def getWarnings = null

  def clearWarnings() {}

  def createStatement(resultSetType: Int, resultSetConcurrency: Int) = null

  def prepareStatement(sql: String, resultSetType: Int, resultSetConcurrency: Int) = null

  def prepareCall(sql: String, resultSetType: Int, resultSetConcurrency: Int) = null

  def getTypeMap = null

  def setTypeMap(map: util.Map[String, Class[_]]) {}

  def setHoldability(holdability: Int) {}

  def getHoldability = 0

  def setSavepoint() = null

  def setSavepoint(name: String) = null

  def rollback(savepoint: Savepoint) {}

  def releaseSavepoint(savepoint: Savepoint) {}

  def createStatement(resultSetType: Int, resultSetConcurrency: Int, resultSetHoldability: Int) = null

  def prepareStatement(sql: String, resultSetType: Int, resultSetConcurrency: Int, resultSetHoldability: Int) = null

  def prepareCall(sql: String, resultSetType: Int, resultSetConcurrency: Int, resultSetHoldability: Int) = null

  def prepareStatement(sql: String, autoGeneratedKeys: Int) = null

  def prepareStatement(sql: String, columnIndexes: Array[Int]) = null

  def prepareStatement(sql: String, columnNames: Array[String]) = null

  def createClob() = null

  def createBlob() = null

  def createNClob() = null

  def createSQLXML() = null

  def isValid(timeout: Int) = false

  def setClientInfo(name: String, value: String) {}

  def setClientInfo(properties: Properties) {}

  def getClientInfo(name: String) = ""

  def getClientInfo = null

  def createArrayOf(typeName: String, elements: Array[AnyRef]) = null

  def createStruct(typeName: String, attributes: Array[AnyRef]) = null

  def setSchema(schema: String) {}

  def getSchema = ""

  def abort(executor: Executor) {}

  def setNetworkTimeout(executor: Executor, milliseconds: Int) {}

  def getNetworkTimeout = 0

  def unwrap[T](iface: Class[T]) = throw new NotImplementedException()

  def isWrapperFor(iface: Class[_]) = false
}
